apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels:
    app: api
spec:
  replicas: 3 # <--- will be patched
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      imagePullSecrets:
        - name: fake-image-pull-secret # <--- will be patched
      containers:
        - name: api
          image: api:v1 # <--- will be patched
          imagePullPolicy: IfNotPresent
          args: [python, app.py]
          env:
            - name: PGDATABASE
              value: postgres
            - name: PGUSER
              value: postgres
            - name: PGPASSWORD
              value: postgres
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            failureThreshold: 30
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            failureThreshold: 90
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 1
            successThreshold: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 10m
              memory: 90Mi
          securityContext:
            allowPrivilegeEscalation: false

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: api
  name: api
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP
  selector:
    app: api

